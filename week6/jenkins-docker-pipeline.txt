From a terminal:
ssh -i [path]/[to]/[pemfile] ec2-user@[your-ec2-dns.amazonaws.com]

/home/ec2-user is where you are


====== EC2 SETUP ===========
sudo yum update -y

sudo yum install java-1.8.0-openjdk-devel -y

sudo wget http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O /etc/yum.repos.d/epel-apache-maven.repo
sudo sed -i s/\$releasever/6/g /etc/yum.repos.d/epel-apache-maven.repo
sudo yum install -y apache-maven

sudo yum install git -y


sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins.io/redhat-stable/jenkins.repo
sudo rpm --import http://pkg.jenkins.io/redhat-stable/jenkins.io.key
sudo yum install -y jenkins-2.289.3-1.1

sudo service jenkins start
	- Setting up jenkins

sudo yum install docker -y
sudo service docker start

sudo usermod -a -G docker jenkins
sudo usermod -a -G docker ec2-user

sudo dd if=/dev/zero of=/swapfile bs=128M count=8
sudo chmod 600 /swapfile
sudo mkswap /swapfile
sudo swapon /swapfile
echo '/swapfile swap swap defaults 0 0' | sudo tee -a /etc/fstab 

sudo chmod 666 /var/run/docker.sock

-------------------------------------------------------
Jenkins is now accessible on port :8080
Go to:your-ec2-dns.amazonaws.com:8080
Jenkins' initial password can be retrieved from the EC2 using: 
sudo cat /var/lib/jenkins/secrets/initialAdminPassword

--> login using master password
--> install recommended plugins
--> setup admin user

------- Create Job -------

--> new item 
--> [enter name] 
--> Pipeline
--> Discard old builds
	- Max # of builds to keep 2 (save resources)
--> Select Pipeline script from SCM under Pipeline -> Definition
--> Select Git as an SCM
	- Make sure that your repository is public, might lead to some issues if private
--> enter repository url
	- Don't forget .git at the end
--> Branches to build under branch specifier
	- main (or whichever branch you'd like)
--> Select GitHub hook trigger for GITScm polling
	- Enables webhooks from GitHub
		- Go to your repo
		- Settings
		- Webhooks
		- Add Webhooks
			- Payload url
				- [ec2-address]:8080/github-webhook/
			- make sure to add "/" at the end other Jenkins might be unhappy
			- Add webhook
	- Edit your EC2 Security group to allow inbounds from Github (addresses can be found here: api.github.com/meta)
		- 192.30.252.0/22
		- 185.199.108.0/22
		- 140.82.112.0/20
--> Apply and Save

--> FOR SENSITIVE INFORMATION
	- Add secret text in Jenkins under credentials
	- GLOBAL variables
		- ie: DB credentials
	
Save, run the build, then view the console output notice maven package success.

If set up properly any pushes to the branch defined should trigger a build